Forms in Vue 3!

-- 
Create BaseInput type

This allows us to replicate, modify, extend them.
This insures consistency between forms.

--

$attr

Whenever you pass down attributes in Vue, vue will try and figureout where to inject the attributes,
	This is easier with a single injection point on root level like so,
		<template>
			<div>            <------ Inject
				[...]
			</div>
		</template>

	But with multiple root places it becomes more difficult, Vue will not decide, but rather issue a warning
		<template>
			<label/>       <----here???
			<input/>			 <---- or here??? 
		</template>

	With multiple root level elements, we have to manually bind the $attr, 
		<input
			```v-bind="$attrs"```


			:placeholder="label"
			class="field"
			:value="modelValue"
			@input="$emit('update:modelValue', $event.target.value)"
  />

--

Select Forms

	-Fire a @change event every time an option is selected.
	-We wil also have to bind $attrs
		-which we will bind with a v-bind

	Since $attrs is a Javascript Object, we can use the spread operator to combine binds.

	v-bind="{
						...$attrs,
						onChange: ($event) => {
							$emit('update:modelValue', $event.target.value)
						}
					}"

In Vue 3 we can use onChange to bind within a v-bind directive as opposed to @change, the v-on shorthand

--
v-model

	By default in Vue 3x using v-model is doing two things:
		1. passing a modelValue prop.
		2. emitting an update:modelValue event.

	To change a model name, instead of just using v-model we add an argument with :
		1. so for example v-model:title has an argument of title
			1. passes a title prop
			2. emits a update:title event


	<input v-model:title="pageTitle"> 

	is equivalent to
					v-bind: "title"  v-on update of title = set pageTitle to event, typically $event.target.value
	<input :title="pageTitle" @update:title="pageTitle = $event">


--
Auto-import

Manually importing gets repetitive, we can do this automatically! Take a look at main.js

--
Checkboxes

	-use :checked not :value
	-defaults to :on

	inputs with type of textbox DO NOT trigger @input events, but rather @change events upon selection change